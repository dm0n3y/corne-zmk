/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define NUM  3

&lt {
    flavor = "hold-preferred";
};

/ {
    chosen {
      zmk,matrix_transform = &five_column_transform;
    };

    behaviors {
        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        cosq: comma_sqt {
            compatible = "zmk,behavior-mod-morph";
            label = "cosq";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp SQT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        pedq: period_dqt {
            compatible = "zmk,behavior-mod-morph";
            label = "pedq";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp DQT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        quex: quest_exclam {
            compatible = "zmk,behavior-mod-morph";
            label = "quex";
            #binding-cells = <0>;
            bindings = <&kp QMARK>, <&kp EXCL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };
        keymap {
                compatible = "zmk,keymap";

                base_layer {
                        display-name = "base";
                        bindings = <
   &kp Q &kp W &kp E &kp R &kp T                              &kp Y        &kp U    &kp I   &kp O   &kp P
   &kp A &kp S &kp D &kp F &kp G                              &kp H        &kp J    &kp K   &kp L   &kp SEMI
   &kp Z &kp X &kp C &kp V &kp B                              &kp N        &kp M    &cosq   &pedq   &quex
   &lt NUM ESC &lt NAV SPACE &mt LSHIFT TAB    &mt RSHIFT RET &lt SYM BSPC &kp DEL
                        >;
                };

                nav_layer {
                        display-name = "nav";
                        bindings = <
   &bt BT_CLR &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_BRI_UP     &kp PG_UP  &kp LG(Z)  &kp UP    &kp LG(LS(Z)) &trans
   &sk LSHIFT &sk LCTRL   &sk LALT      &sk LCMD      &kp C_BRI_DN     &kp LC(A)  &kp LEFT   &kp DOWN  &kp RIGHT     &kp LC(E)
   &trans     &kp C_PREV  &kp C_PP      &kp C_NEXT    &kp LG(LC(Q))    &kp PG_DN  &kp LG(V)  &kp LG(C) &kp LG(X)     &trans
                          &trans        &trans        &trans           &kp RET    &kp BSPC   &kp DEL
                        >;
                };

                sym_layer {
                        display-name = "sym";
                        bindings = <
   &trans    &kp HASH   &kp FSLH  &kp LBRC   &kp RBRC     &kp TILDE  &kp LT    &kp EQUAL  &kp GT     &trans
   &kp AT    &kp DLLR   &kp PIPE  &kp LPAR   &kp RPAR     &kp GRAVE  &sk RCMD  &sk RALT   &sk RCTRL  &sk RSHIFT
   &kp AMPS  &kp PRCNT  &kp BLSH  &kp LBKT   &kp RBKT     &kp CARET  &kp STAR  &kp PLUS   &kp MINUS  &kp UNDER
                        &kp ESC   &kp SPACE  &kp TAB      &trans     &trans    &trans
                        >;
                };

                num_layer {
                        display-name = "num";
                        bindings = <

   &trans     &trans    &trans    &trans     &trans      &kp DEL  &kp KP_N7  &kp KP_N8  &kp KP_N9  &trans
   &sk LSHIFT &sk LCTRL &sk LALT  &sk LCMD   &trans      &kp BSPC &kp KP_N4  &kp KP_N5  &kp KP_N6  &trans
   &trans     &trans    &trans    &trans     &trans      &kp TAB  &kp KP_N1  &kp KP_N2  &kp KP_N3  &trans
                        &trans    &trans     &trans      &kp RET  &kp KP_N0  &kp KP_DOT
                        >;
                };
        };
};
