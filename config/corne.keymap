/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE 0
#define NUM_NAV 1
#define SYM 2

/ {
    chosen {
      zmk,matrix_transform = &five_column_transform;
    };

    behaviors {
        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };
        keymap {
                compatible = "zmk,keymap";

                base_layer {
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T  |     |  Y  |  U   |  I  |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G  |     |  H  |  J   |  K  |  L  |  ;  | 
// |  Z  |  X  |  C  |  V  |  B  |     |  N  |  M   |  ,  |  .  |  ?  |
//             | ESC | SPC | TAB |     | ENT | BSPC | DEL |
                        display-name = "base";
                        bindings = <
   &kp Q &kp W &kp E &kp R &kp T               &kp Y  &kp U  &kp I      &kp O    &kp P
   &kp A &kp S &kp D &kp F &kp G               &kp H  &kp J  &kp K      &kp L    &kp SEMI
   &kp Z &kp X &kp C &kp V &kp B               &kp N  &kp M  &kp COMMA  &kp DOT  &kp QMARK
   &kp ESC &lt NUM_NAV SPACE &mt LSHIFT TAB    &mt RSHIFT RET &lt SYM BSPC &kp DEL
                        >;
                };

                num_nav_layer {
// -----------------------------------------------------------------------------------------
// | 0    |  1  |  2  |  3   |  4  |     | PGUP | UNDO |  UP  | REDO |  )  |
// | CTRL | ALT | CMD | SHFT |  5  |     | HOME | LFT  |  DN  | RGT  | END |
// | DOT  |  9  |  8  |  7   |  6  |     | PGDN | PAST |  CP  | CUT  |     |
//              |     |      |     |     | ENT  | BSPC | DEL |
                        display-name = "num-nav";
                        bindings = <
   &kp KP_N0   &kp KP_N1  &kp KP_N2  &kp KP_N3   &kp KP_N4     &kp PG_UP  &kp LG(Z)  &kp UP    &kp LG(LS(Z)) &trans
   &sk LCTRL   &sk LALT   &sk LCMD   &sk LSHIFT  &kp KP_N5     &kp HOME   &kp LEFT   &kp DOWN  &kp RIGHT     &kp END 
   &KP KP_DOT  &kp KP_N9  &kp KP_N8  &kp KP_N7   &kp KP_N6     &kp PG_DN  &kp LG(V)  &kp LG(C) &kp LG(X)     &trans
                         &trans     &trans      &trans        &kp RET    &kp BSPC   &kp DEL
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  /  |  |  |  \  |  {  |  }  |     |  $  |  #   |  @  |  !  |  `   |
// |  <  |  =  |  >  |  (  |  )  |     |  %  | SHFT | CMD | ALT | CTRL |
// |  ~  |  _  |  -  |  [  |  ]  |     |  ^  |  &   |  *  |  +  |  '   |
//             | ESC | SPC | TAB |     |     |      |     |
                        display-name = "sym";
                        bindings = <

   &kp FSLH  &kp PIPE  &kp BSLH   &kp LBRC   &kp RBRC    &kp DLLR  &kp HASH    &kp AT          &kp EXCL     &kp GRAVE
   &kp LT    &kp EQUAL &kp GT     &kp LPAR   &kp RPAR    &kp PRCNT &sk RSHIFT  &sk RCMD        &sk RALT     &sk RCTRL
   &kp TILDE &kp UNDER &kp MINUS  &kp LBKT   &kp RBKT    &kp CARET &kp AMPS    &kp KP_MULTIPLY &kp KP_PLUS  &kp SQT
                       &kp ESC    &kp SPACE  &kp TAB     &trans &trans &trans
                        >;
                };
        };
};
